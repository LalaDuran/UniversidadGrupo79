package Vistas;

import AccesoADatos.AlumnoData;
import Entidades.Alumno;
import com.toedter.calendar.JDateChooser;
import java.util.Date;
import java.time.LocalDate;
import java.time.ZoneId;
import javax.swing.JOptionPane;

public class FormularioAlumno extends javax.swing.JInternalFrame {

    public FormularioAlumno() {
        initComponents();
        
        //Inhabilita los botones 'Nuevo' y 'Eliminar'
        jbNuevo.setEnabled(false);
        jbEliminar.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfDocumento = new javax.swing.JTextField();
        jtfNombre = new javax.swing.JTextField();
        jtfApellido = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jbBuscar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jrbEstado = new javax.swing.JRadioButton();
        jdcFechaNac = new com.toedter.calendar.JDateChooser();

        setPreferredSize(new java.awt.Dimension(600, 500));

        jLabel1.setText("Documento");

        jLabel2.setText("Nombre");

        jLabel3.setText("Apellido");

        jLabel4.setText("Estado");

        jLabel5.setText("Fecha de Nacimiento");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Formulario de Alumno");

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jbNuevo)
                        .addGap(66, 66, 66)
                        .addComponent(jbEliminar)
                        .addGap(65, 65, 65)
                        .addComponent(jbGuardar)
                        .addGap(76, 76, 76)
                        .addComponent(jbSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jtfNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                            .addComponent(jtfDocumento)
                                            .addComponent(jtfApellido))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jbBuscar))
                                    .addComponent(jrbEstado)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jdcFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel6)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jbBuscar))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addComponent(jrbEstado))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jdcFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNuevo)
                    .addComponent(jbEliminar)
                    .addComponent(jbGuardar)
                    .addComponent(jbSalir))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        //Si no completa el campo 'Documento'
        if (jtfDocumento.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe completar el campo 'Documento'");

        } else {

            try {
                //Asignamos a una variable el dato ingresado en la vista
                int dniBuscado = Integer.parseInt(jtfDocumento.getText());

                //Instanciamos un alumno y alumnoData para usar luego
                AlumnoData ad = new AlumnoData();
                Alumno alumnoBuscado = new Alumno();

                //Buscamos un alumno por dni usando buscar de alumnoData
                alumnoBuscado = ad.buscarAlumnoPorDni(dniBuscado);

                //Mostramos en la vista los datos del alumno encontrado
                jtfDocumento.setText(Integer.toString(alumnoBuscado.getDni()));
                jtfNombre.setText(alumnoBuscado.getNombre());
                jtfApellido.setText(alumnoBuscado.getApellido());
                jrbEstado.setSelected(alumnoBuscado.isActivo());

                //Pasamos de Date a LocalDate
                //default time zone
                ZoneId defaultZoneId = ZoneId.systemDefault();
                //creating the instance of LocalDate using the day, month, year info
                LocalDate localDate = alumnoBuscado.getFechaNacim();
                //local date + atStartOfDay() + default time zone + toInstant() = Date
                jdcFechaNac.setDate(Date.from(localDate.atStartOfDay(defaultZoneId).toInstant()));
                //Habilitamos los botones 'Nuevo' y 'Eliminar'
                jbNuevo.setEnabled(true);
                jbEliminar.setEnabled(true);
                
            } catch (NumberFormatException nfe) {
                //si ingresa letras o símbolos
                JOptionPane.showMessageDialog(this, "Ingrese sólo números");
                jtfDocumento.setText("");
            } catch (NullPointerException npe) {
                //si no existe alumno con el dni tipeado en la vista, salta el JOptionPane del método buscarAlumnoPorDni
            }
        }
    }//GEN-LAST:event_jbBuscarActionPerformed


    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        //Limpia la pantalla para cargar un alumno nuevo

        jtfApellido.setText("");
        jtfNombre.setText("");
        jtfDocumento.setText("");
        jrbEstado.setSelected(false);
        jdcFechaNac.setCalendar(null);


    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        //Si el campo Código está vacío
        if (jtfDocumento.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Complete el campo 'Documento'");
        } else {

            try {
                //Instanciamos alumno y alumnoData para usar luego
                Alumno a = new Alumno();
                AlumnoData ad = new AlumnoData();
                //Creamos una variable con el documento tipeado en la vista
                int dni = Integer.parseInt(jtfDocumento.getText());

                //Buscamos el alumno con ese documento y lo enviamos al alumno ya creado
                a = ad.buscarAlumnoPorDni(dni);

                //Eliminamos el alumno llamando al método eliminarAlumno de alumnoData
                ad.eliminarAlumno(a.getIdAlumno());

                //Limpiamos los campos de la vista
                jtfDocumento.setText("");
                jtfNombre.setText("");
                jtfApellido.setText("");
                jrbEstado.setSelected(false);

            } catch (NumberFormatException ex) {
                //Si no tipea un documento en la vista
                JOptionPane.showMessageDialog(null, "Ingrese un DNI");
            }
        }

    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        //Instanciamos alumnoData para usar luego
        AlumnoData ad = new AlumnoData();

        try {
            //creamos las variables y asignamos los valores tipeados en la vista
            int dni = Integer.parseInt(jtfDocumento.getText());
            String apellido = jtfApellido.getText();
            String nombre = jtfNombre.getText();
            Date date = jdcFechaNac.getDate();
            LocalDate ld = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            boolean estado = jrbEstado.isSelected();
            //Instanciamos un alumno con los parámetros anteriores
            Alumno a = new Alumno(dni, apellido, nombre, ld, estado);

            //declaramos una variable bandera por si ya existe el dni tipeado en vista
            boolean existeDNI = false;

            //Recorremos la lista de alumnos existentes
            for (Alumno existingAlumno : ad.listarAlumno()) {

                if (existingAlumno.getDni() == a.getDni()) {
                    //Si existe el alumno, seteamos el id para poder acceder al método modificar; si no existe se activa la bandera más abajo 
                    a.setIdAlumno(ad.buscarAlumnoPorDni(a.getDni()).getIdAlumno());
                    existeDNI = true;
                    break;
                }
            }
            //Si existe el alumno usa el método modificarAlumno; si no, guardarAlumno
            if (existeDNI == true) {
                ad.modificarAlumno(a);
            } else {
                ad.guardarAlumno(a);
            }
            
            //Habilitamos los botones 'Eliminar' y 'Nuevo'
            jbEliminar.setEnabled(true);
            jbNuevo.setEnabled(true);

        } catch (NullPointerException ex) {
            //Si algún campo está vacío
            JOptionPane.showMessageDialog(null, "Complete el campo 'Documento'");
        } catch (NumberFormatException ex) {
            //Si no usa números enteros en Documento
            JOptionPane.showMessageDialog(null,"Use sólo números enteros para 'Documento'");
        }

    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        //Invisibiliza, deselecciona y cierra la ventana
        this.dispose();

    }//GEN-LAST:event_jbSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private com.toedter.calendar.JDateChooser jdcFechaNac;
    private javax.swing.JRadioButton jrbEstado;
    private javax.swing.JTextField jtfApellido;
    private javax.swing.JTextField jtfDocumento;
    private javax.swing.JTextField jtfNombre;
    // End of variables declaration//GEN-END:variables
}
